<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>重庆大学机械学院唐倩团队</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tqcqu.github.io/"/>
  <updated>2022-05-05T15:50:45.118Z</updated>
  <id>http://tqcqu.github.io/</id>
  
  <author>
    <name>唐倩</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vscode配置github</title>
    <link href="http://tqcqu.github.io/604-vscode-git/"/>
    <id>http://tqcqu.github.io/604-vscode-git/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2022-05-05T15:50:45.118Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容：1、windows环境下在vscode中配置git。</p><p>维护：<code>何文喆（2022秋入学硕士生）</code></p><p>部署：<code>郭伏雨（博士生）</code></p><a id="more"></a><p>本文代码默认均为bash，代码中不应该出现中文，出现的中文要对应替换。</p><p>中文句号后出现:end:，表示上下文间断。</p><h2 id="在Windows系统下的VScode中配置Git"><a href="#在Windows系统下的VScode中配置Git" class="headerlink" title="在Windows系统下的VScode中配置Git"></a>在Windows系统下的VScode中配置Git</h2><h3 id="一、任务描述"><a href="#一、任务描述" class="headerlink" title="一、任务描述"></a>一、任务描述</h3><h5 id="1-1-任务目的"><a href="#1-1-任务目的" class="headerlink" title="1.1  任务目的"></a>1.1  任务目的</h5><p>本文档的目的是在VScode中配置Git，从而能够方便地与Github进行通讯，拉去与提交程序。</p><h5 id="1-2-任务材料"><a href="#1-2-任务材料" class="headerlink" title="1.2  任务材料"></a>1.2  任务材料</h5><p>Git软件、VScode软件、科学上网工具（PG2Ray）</p><h5 id="1-3-参考材料"><a href="#1-3-参考材料" class="headerlink" title="1.3  参考材料"></a>1.3  参考材料</h5><p>（1）Git安装教程：<a href="https://blog.csdn.net/mukes/article/details/115693833" target="_blank" rel="noopener">https://blog.csdn.net/mukes/article/details/115693833</a></p><p>（2）VScode配置git教程：<a href="https://blog.csdn.net/czjl6886/article/details/122129576" target="_blank" rel="noopener">https://blog.csdn.net/czjl6886/article/details/122129576</a></p><h3 id="二、git的安装"><a href="#二、git的安装" class="headerlink" title="二、git的安装"></a>二、git的安装</h3><h5 id="2-1-Git的下载"><a href="#2-1-Git的下载" class="headerlink" title="2.1  Git的下载"></a>2.1  Git的下载</h5><p>直接在Git官网<a href="https://git-scm.com/下载即可，选择Windows系统的Git安装包。此处建议科学上网，提高下载速度。" target="_blank" rel="noopener">https://git-scm.com/下载即可，选择Windows系统的Git安装包。此处建议科学上网，提高下载速度。</a></p><h5 id="2-2-Git的安装"><a href="#2-2-Git的安装" class="headerlink" title="2.2  Git的安装"></a>2.2  Git的安装</h5><p>安装教程在参考材料（1）中介绍的很详细，此处仅介绍部分需要注意的环节。</p><p>（1）第二步：选择安装目录</p><p>​        建议安装在D盘中，并且确保父目录中没有任何中文，避免未来因不明原因报错。</p><p>​        注：此处需要记住Git的安装路径，接下来配置VScode时会用到。</p><p>（2）第三步：选择安装组件</p><p>​        建议不选最后两个，倒数第二个是每日检查Git软件是否更新，倒数第一个是将Git Bash的配置文件添加在Windows terminal中，需要下载Windows terminal配合使用，这两个选项没有必要。</p><p>（3）第五步：选择Git默认编辑器</p><p>​        此处选择VScode作为默认编辑器，需要下载VScode配合使用，此外，还需要在我的电脑-属性-高级系统设置-高级-环境变量-系统变量-path-编辑中添加VScode的安装地址，为稳妥起见，可添加D:\vscode\Microsoft VS Code和D:\vscode\Microsoft VS Code\bin两个地址。</p><p>（4）其余部分按照参考材料（1）中配置，或者选择安装程序默认的即可。</p><h3 id="三、在VScode中配置Git"><a href="#三、在VScode中配置Git" class="headerlink" title="三、在VScode中配置Git"></a>三、在VScode中配置Git</h3><p>（1）在VScode中同时按下ctrl与，键，打开setting界面。</p><p>（2）在setting的搜索框中输入git.path，会跳出唯一一个选项</p><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/Vvh59TFg/1.png" width="600">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"></div></center><p>（3）点击Edit in settings.json，进入设置。在设置中添加Git的安装地址，如：”git.path”: “D:/git/Git/cmd/git.exe”。注意，要添加的是cmd文件夹下的git.exe文件，而不是添加git文件夹。</p><p>（4）接下来就可以在VScode的左侧菜单中选择仓库位置了</p><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/VvvdC1X5/2.png" width="600">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"></div></center><p>​        点击上图红圈位置，选择clone，页面正上方出现clone from github</p><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/FRDYz1d2/3.png" width="600">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"></div></center><p>​        接下来可能需要转到浏览器中同意clone，并且需要输入Github的密码进行确认，由于我在进行测试时已经输入过，因此此处没有截图。</p><p>（5）clone之前还需要选择仓库地址Repository Location，选择好之后VScode就会进行clone。</p><p>（6）在程序文件中更改代码时，左侧的change栏和上方的标签页会提示哪些文件被修改了。</p><p>修改完成后，先保存文件，（有时也可能不需要保存文件），然后点击左侧change栏的 + 号，文件就被放置在了缓存区，此 + 号表示add。</p><p>（7）在下图红线标注的地方写入此次更改的信息后，就可以点击篮圈中的 √ 号，完成commit命令。</p><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/j5sWRy5H/4.png" width="600">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;"></div></center><p>（8）点击上图黄圈处，在展开的菜单中依次点击pull 和push，或者直接点击Sync Changes 进行pull和push。</p><p>（9）命令完成后VScode需要对Github账号进行认证，按步完成即可。</p><p>至此，在Windows系统下的VScode中配置Git已经初步完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容：1、windows环境下在vscode中配置git。&lt;/p&gt;
&lt;p&gt;维护：&lt;code&gt;何文喆（2022秋入学硕士生）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;部署：&lt;code&gt;郭伏雨（博士生）&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows下深度学习环境搭建</title>
    <link href="http://tqcqu.github.io/605-win-deep-learning/"/>
    <id>http://tqcqu.github.io/605-win-deep-learning/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2022-05-06T14:29:54.321Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容：1、Windows下深度学习环境搭建，涉及到anaconda、cuda、cudnn、pytorch安装。</p><p>维护：<code>吴海鹏（2020秋入学硕士生）</code></p><p>部署：<code>郭伏雨（博士生）</code></p><a id="more"></a><h1 id="Windows下深度学习环境搭建"><a href="#Windows下深度学习环境搭建" class="headerlink" title="Windows下深度学习环境搭建"></a><strong>Windows下深度学习环境搭建</strong></h1><h4 id="配置环境总体思路：依据python版本选择对应Anaconda版本；"><a href="#配置环境总体思路：依据python版本选择对应Anaconda版本；" class="headerlink" title="配置环境总体思路：依据python版本选择对应Anaconda版本；"></a>配置环境总体思路：依据python版本选择对应Anaconda版本；</h4><h4 id="依据显卡驱动版本选择对应的CUDA版本；"><a href="#依据显卡驱动版本选择对应的CUDA版本；" class="headerlink" title="依据显卡驱动版本选择对应的CUDA版本；"></a>依据显卡驱动版本选择对应的CUDA版本；</h4><h4 id="依据CUDA版本选择对应的cudnn和pytorch版本。"><a href="#依据CUDA版本选择对应的cudnn和pytorch版本。" class="headerlink" title="依据CUDA版本选择对应的cudnn和pytorch版本。"></a>依据CUDA版本选择对应的cudnn和pytorch版本。</h4><h5 id="实验室目前配置的是：python3-7版本（有已下好的搭建环境所需软件）"><a href="#实验室目前配置的是：python3-7版本（有已下好的搭建环境所需软件）" class="headerlink" title="实验室目前配置的是：python3.7版本（有已下好的搭建环境所需软件）"></a>实验室目前配置的是：python3.7版本（有已下好的搭建环境所需软件）</h5><h2 id="第一步：Anaconda安装"><a href="#第一步：Anaconda安装" class="headerlink" title="第一步：Anaconda安装"></a>第一步：Anaconda安装</h2><h4 id="一、由于anaconda自带Python，只需确定要安装的Python版本，然后下载对应的anaconda版本安装包。"><a href="#一、由于anaconda自带Python，只需确定要安装的Python版本，然后下载对应的anaconda版本安装包。" class="headerlink" title="一、由于anaconda自带Python，只需确定要安装的Python版本，然后下载对应的anaconda版本安装包。"></a><strong>一、</strong>由于anaconda自带Python，只需确定要安装的Python版本，然后下载对应的anaconda版本安装包。</h4><h4 id="二、下载地址："><a href="#二、下载地址：" class="headerlink" title="二、下载地址："></a><strong>二、下载地址</strong>：</h4><p>​        1.官网  <a href="https://www.anaconda.com/products/individual" target="_blank" rel="noopener">https://www.anaconda.com/products/individual</a></p><p>​        2.清华源  <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p><p>​        注：若官网下载速度慢，可用清华源下载；注意操作系统的位数（一般是64位的）</p><h4 id="三、安装教程："><a href="#三、安装教程：" class="headerlink" title="三、安装教程："></a>三、安装教程：</h4><p>​       1.双击运行下载的.exe文件，按照以下顺序点击：Next → I Agree</p><p>​       2.选择用户：Just Me 或 All Users 都可以，默认选择 Just Me</p><p>​       3.选择安装目录：一般不建议安装到C盘；可更改安装路径，注意安装路径不能出现中文、空格，使用纯英文即可。</p><p>​       4.勾选安装参数：一是添加anaconda到环境变量中（path），二是将anaconda的python版本作为默认的python版本； 建议两者都勾选，环境变量手动再添加一遍（后续有介绍）。</p><p>​       5.等待安装即可，结束时最后 “两个learn” 都不需要勾选，点击Finish即可。</p><h4 id="四、配置环境变量"><a href="#四、配置环境变量" class="headerlink" title="四、配置环境变量"></a>四、配置环境变量</h4><h5 id="此电脑——属性——高级系统设置——环境变量——path——编辑——新建"><a href="#此电脑——属性——高级系统设置——环境变量——path——编辑——新建" class="headerlink" title="此电脑——属性——高级系统设置——环境变量——path——编辑——新建"></a>此电脑——属性——高级系统设置——环境变量——path——编辑——新建</h5><p>​       1.鼠标选择”此电脑“，单击鼠标右键，选择 ”<strong>属性</strong>“；</p><p>​       2.左键单击左侧一栏的 “高级系统设置”；</p><p>​       3.点击 “高级”一栏中的 “环境变量”；</p><p>​       4.点击 “系统变量”中的 “Path”项，选择编辑；</p><p>​       5.点击 “新建”，然后添加以下类似路径（保证最后路径的文件名称相同就行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\Anaconda     （Python需要）</span><br><span class="line">E:\Anaconda\Scripts        （conda自带脚本）</span><br><span class="line">E:\Anaconda\Library\mingw-w64\bin     （使用C with python的时候） </span><br><span class="line">E:\Anaconda\Library\bin               （jupyter notebook动态库）</span><br><span class="line">E:\Anaconda\Library\usr\bin  （我自己没找到此文件夹，若存在可将此条也加上）</span><br></pre></td></tr></table></figure><p>注：切记记得点击  确定  !!!</p><h4 id="五、安装测试："><a href="#五、安装测试：" class="headerlink" title="五、安装测试："></a>五、安装测试：</h4><ol><li><p>win+R，输入cmd，进入命令提示符</p></li><li><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>若跳出conda版本，则表示anaconda安装成功，且已经配置好环境变量。</p></li></ol><h2 id="第二步：CUDA安装"><a href="#第二步：CUDA安装" class="headerlink" title="第二步：CUDA安装"></a>第二步：CUDA安装</h2><h4 id="一、确定版本"><a href="#一、确定版本" class="headerlink" title="一、确定版本"></a>一、确定版本</h4><h5 id="控制面板——硬件和声音——NVIDIA控制面板——帮助——系统信息——组件"><a href="#控制面板——硬件和声音——NVIDIA控制面板——帮助——系统信息——组件" class="headerlink" title="控制面板——硬件和声音——NVIDIA控制面板——帮助——系统信息——组件"></a>控制面板——硬件和声音——NVIDIA控制面板——帮助——系统信息——组件</h5><p>​     1.第三行，NVCUDA64.DLL  可查看显卡驱动版本支持的最高CUDA版本；</p><p>​      2.网页搜索相应CUDA版本安装，建议不需要安装太新版本。网页直接可查找；</p><h4 id="二、安装步骤"><a href="#二、安装步骤" class="headerlink" title="二、安装步骤"></a>二、安装步骤</h4><p>​     1.双击运行.exe文件后，前两项是默认安装；</p><p>​     2.当选择安装选项时，选择自定义安装，驱动程序组件第一次安装尽量全选；</p><p>​     3.记得留意CUDA安装位置，之后cudnn的安装会用到！！</p><h4 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h4><p>​     1.win+R，输入cmd，进入命令提示符</p><p>​     2.输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure><h4 id="四、添加至系统变量"><a href="#四、添加至系统变量" class="headerlink" title="四、添加至系统变量"></a>四、添加至系统变量</h4><p>​      1. 添加方法与anaconda的相同：<strong>此电脑——属性——高级系统设置——环境变量——path——编辑——新建</strong></p><p>​      2.添加以下类似路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\bin</span><br><span class="line">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\include</span><br><span class="line">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\lib</span><br><span class="line">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\libnvvp</span><br></pre></td></tr></table></figure><p>​      3.有些路径在安装时可能已经添加，手动补充没有的即可</p><h2 id="第三步：cuDNN配置"><a href="#第三步：cuDNN配置" class="headerlink" title="第三步：cuDNN配置"></a>第三步：cuDNN配置</h2><p>​      1.进入官网依照cuda版本选择cudnn文件下载（需要注册账号）</p><p>​         <a href="https://developer.nvidia.cn/zh-cn/cuda-toolkit" target="_blank" rel="noopener">https://developer.nvidia.cn/zh-cn/cuda-toolkit</a> </p><p>​      2.解压下载的cudnn文件，会获得三个文件夹：bin、include、lib；</p><p>​      3.将这三个文件夹复制到之前CUDA的安装路径里，最后一个路径名应是cuda版本号</p><p>​      4.CUDA安装时若是默认路径，则一般为：C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0</p><h2 id="第四步：pytorch安装（使用清华镜像）"><a href="#第四步：pytorch安装（使用清华镜像）" class="headerlink" title="第四步：pytorch安装（使用清华镜像）"></a>第四步：pytorch安装（使用清华镜像）</h2><h4 id="一、打开-Anaconda-Prompt"><a href="#一、打开-Anaconda-Prompt" class="headerlink" title="一、打开   Anaconda Prompt"></a>一、打开   <strong>Anaconda Prompt</strong></h4><h4 id="二、添加清华镜像"><a href="#二、添加清华镜像" class="headerlink" title="二、添加清华镜像"></a>二、添加清华镜像</h4><p>​       依次输入下列三行代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><h4 id="三、添加pytorch镜像"><a href="#三、添加pytorch镜像" class="headerlink" title="三、添加pytorch镜像"></a>三、添加pytorch镜像</h4><p>​       接着输入下列代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/win-64/</span><br></pre></td></tr></table></figure><h4 id="四、安装pytorch"><a href="#四、安装pytorch" class="headerlink" title="四、安装pytorch"></a>四、安装pytorch</h4><p>​       进入官网   <a href="https://pytorch.org/" target="_blank" rel="noopener">https://pytorch.org/</a></p><p>​       ①在官网根据自己之前安装的环境依次选择，然后复制官网给出的命令语：</p><p>​       <strong>Install——stable——Windows——conda——python——10.2  （以cuda10.2为例）</strong></p><p>​       ②若按照上列方式官网提供的cuda版本过高，点击上方的 <strong>“ install previous versions of pytroch”</strong>，选择旧版本</p><p>​       ③根据不同的版本搜索自己的下载语句，记住去掉 <strong>-c pytorch</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda insatll pytorch torchvision torchaudio cudatookit=10.2  （以cuda10.2为例）</span><br></pre></td></tr></table></figure><h4 id="五、注意事项"><a href="#五、注意事项" class="headerlink" title="五、注意事项"></a>五、注意事项</h4><p>​       <strong>如果以前安装过pytorch或者安装失败过，在安装前执行下面两条语句：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall pytorch</span><br><span class="line">conda uninstall libtorch</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容：1、Windows下深度学习环境搭建，涉及到anaconda、cuda、cudnn、pytorch安装。&lt;/p&gt;
&lt;p&gt;维护：&lt;code&gt;吴海鹏（2020秋入学硕士生）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;部署：&lt;code&gt;郭伏雨（博士生）&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows下深度学习的虚拟环境搭建</title>
    <link href="http://tqcqu.github.io/606-win-anaconda-TensorFlow/"/>
    <id>http://tqcqu.github.io/606-win-anaconda-TensorFlow/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2022-05-06T14:31:50.228Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容：1、Windows下深度学习的虚拟环境搭建，涉及到anaconda、cuda、cudnn、tensorflow安装。</p><p>维护：<code>吴海鹏（2020秋入学硕士生）</code></p><p>部署：<code>郭伏雨（博士生）</code></p><a id="more"></a><h1 id="win10，在anaconda虚拟环境中安装特定的深度学习版本（以TensorFlow为例）"><a href="#win10，在anaconda虚拟环境中安装特定的深度学习版本（以TensorFlow为例）" class="headerlink" title="win10，在anaconda虚拟环境中安装特定的深度学习版本（以TensorFlow为例）"></a>win10，在anaconda虚拟环境中安装特定的深度学习版本（以TensorFlow为例）</h1><h3 id="以下内容是在已经安装好anaconda软件后配置的"><a href="#以下内容是在已经安装好anaconda软件后配置的" class="headerlink" title="以下内容是在已经安装好anaconda软件后配置的"></a>以下内容是在已经安装好anaconda软件后配置的</h3><h2 id="一、安装cuda及cudnn"><a href="#一、安装cuda及cudnn" class="headerlink" title="一、安装cuda及cudnn"></a>一、安装cuda及cudnn</h2><h3 id="1-离线安装"><a href="#1-离线安装" class="headerlink" title="1.离线安装"></a>1.离线安装</h3><p>1.根据项目要求，先利用官网安装好需要的cuda版本，<strong>不需要配置环境变量</strong>。</p><p>2.经过实践证明，通过conda命令安装的cuda，不能完成配置，<strong>cuda仍为系统环境变量配置版本</strong>。</p><h3 id="2-anaconda虚拟环境中"><a href="#2-anaconda虚拟环境中" class="headerlink" title="2.anaconda虚拟环境中"></a>2.anaconda虚拟环境中</h3><h5 id="a-创建虚拟环境：打开anaconda-prompt，输入："><a href="#a-创建虚拟环境：打开anaconda-prompt，输入：" class="headerlink" title="a.创建虚拟环境：打开anaconda prompt，输入："></a>a.创建虚拟环境：打开anaconda prompt，输入：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tensorflow python=3.7 # tensorflow为虚拟环境名称可自定义；python版本也可自己设定</span><br></pre></td></tr></table></figure><h5 id="b-激活虚拟环境并安装cuda和cudnn"><a href="#b-激活虚拟环境并安装cuda和cudnn" class="headerlink" title="b.激活虚拟环境并安装cuda和cudnn"></a>b.激活虚拟环境并安装cuda和cudnn</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">activate tensorflow  #激活虚拟环境</span><br><span class="line">conda install cudatoolkit=10.1 # 安装需要的cuda对应版本，与之前离线安装版本对应</span><br><span class="line">conda install cudnn=7.6.0 # 安装cudnn 对应版本可网上查阅</span><br></pre></td></tr></table></figure><h5 id="c-cuda版本也可自行选择，cudnn和cuda版本对应请自行百度。如果下载很慢容易断开，建议搭个梯子或者使用清华镜像源："><a href="#c-cuda版本也可自行选择，cudnn和cuda版本对应请自行百度。如果下载很慢容易断开，建议搭个梯子或者使用清华镜像源：" class="headerlink" title="c.cuda版本也可自行选择，cudnn和cuda版本对应请自行百度。如果下载很慢容易断开，建议搭个梯子或者使用清华镜像源："></a>c.cuda版本也可自行选择，cudnn和cuda版本对应请自行百度。如果下载很慢容易断开，建议搭个梯子或者使用清华镜像源：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge </span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br></pre></td></tr></table></figure><h5 id="d-检测cuda是否安装成功："><a href="#d-检测cuda是否安装成功：" class="headerlink" title="d.检测cuda是否安装成功："></a>d.检测cuda是否安装成功：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><p><strong>1.经实践证明，可以直接安装tensorflow-gpu，即直接执行步骤二，其对应的cuda与cudnn可自动配置安装。</strong></p><p><strong>2.若配置其他框架，仍需按顺序安装。</strong></p><h2 id="二、安装tensorflow-gpu"><a href="#二、安装tensorflow-gpu" class="headerlink" title="二、安装tensorflow-gpu"></a>二、安装tensorflow-gpu</h2><h5 id="1-tensorflow与cuda、cudnn、pyhton的版本都有对应关系，具体对应关系可上网查阅"><a href="#1-tensorflow与cuda、cudnn、pyhton的版本都有对应关系，具体对应关系可上网查阅" class="headerlink" title="1.tensorflow与cuda、cudnn、pyhton的版本都有对应关系，具体对应关系可上网查阅"></a>1.tensorflow与cuda、cudnn、pyhton的版本都有对应关系，具体对应关系可上网查阅</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install tensorflow-gpu==2.3.0</span><br></pre></td></tr></table></figure><h5 id="2-numpy安装"><a href="#2-numpy安装" class="headerlink" title="2.numpy安装"></a>2.numpy安装</h5><p>tensorflow与numpy有版本对应关系，可以先安装tensorflow后，运行程序报错再按需求选择较低版本安装；或者直接在安装tensorflow前安装合适版本的numpy直接安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy==1.16.0 # 安装numpy版本，安装之前请先卸载</span><br><span class="line">pip uninstall numpy # 卸载numpy</span><br><span class="line">conda list # 显示新建虚拟环境所有已安装模块</span><br></pre></td></tr></table></figure><h5 id="3-验证"><a href="#3-验证" class="headerlink" title="3.验证"></a>3.验证</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">version = tf.__version__</span><br><span class="line">gpu_ok = tf.test.is_gpu_available()</span><br><span class="line">print(&quot;tf version:&quot;,version,&quot;\nuse GPU&quot;,gpu_ok)</span><br></pre></td></tr></table></figure><h2 id="三、为不同虚拟环境配置不同的cuda"><a href="#三、为不同虚拟环境配置不同的cuda" class="headerlink" title="三、为不同虚拟环境配置不同的cuda"></a>三、为不同虚拟环境配置不同的cuda</h2><h5 id="1-打开anaconda-prompt，进入需要配置的虚拟环境："><a href="#1-打开anaconda-prompt，进入需要配置的虚拟环境：" class="headerlink" title="1.打开anaconda prompt，进入需要配置的虚拟环境："></a>1.打开anaconda prompt，进入需要配置的虚拟环境：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate tensorflow  #激活虚拟环境</span><br></pre></td></tr></table></figure><h5 id="2-将prompt窗口定位到虚拟环镜主目录下："><a href="#2-将prompt窗口定位到虚拟环镜主目录下：" class="headerlink" title="2.将prompt窗口定位到虚拟环镜主目录下："></a>2.将prompt窗口定位到虚拟环镜主目录下：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Anaconda3\envs\tensorflow #anaconda默认安装在c盘</span><br><span class="line">cd /d D:\Users\Anaconda3\envs\tensorflow  #anaconda安装在其他位置</span><br><span class="line">显示效果：(tensorflow) D:\Users\Anaconda3\envs\tensorflow&gt;</span><br></pre></td></tr></table></figure><h5 id="3-执行以下命令："><a href="#3-执行以下命令：" class="headerlink" title="3.执行以下命令："></a>3.执行以下命令：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir .\etc\conda\activate.d #创建activate.d文件夹</span><br><span class="line">mkdir .\etc\conda\deactivate.d #创建deactivate.d文件夹</span><br></pre></td></tr></table></figure><h5 id="4-在activate-d文件夹中创建-env-vars-bat文件，将cuda版本添加到临时系统变量中。"><a href="#4-在activate-d文件夹中创建-env-vars-bat文件，将cuda版本添加到临时系统变量中。" class="headerlink" title="4.在activate.d文件夹中创建 env_vars.bat文件，将cuda版本添加到临时系统变量中。"></a>4.在activate.d文件夹中创建 <strong>env_vars.bat</strong>文件，将cuda版本添加到临时系统变量中。</h5><p>a.创建.bat文件方法：右键-&gt;新建文本文档-&gt;另存为-&gt;文件名.bat，保存类型：所有文件</p><p>b.内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@set CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\bin</span><br><span class="line">@set CUDA_NVVP=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\libnvvp</span><br><span class="line">@set CUDA_lib=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\lib\x64</span><br><span class="line">@set OLD_PATH=%PATH%</span><br><span class="line">@set PATH=%CUDA_PATH%;%CUDA_NVVP%;%CUDA_lib%;%PATH%;</span><br></pre></td></tr></table></figure><h5 id="5-在deactivate-d文件夹中创建同名文件env-vars-bat，将环境变量重置为原始的内容。"><a href="#5-在deactivate-d文件夹中创建同名文件env-vars-bat，将环境变量重置为原始的内容。" class="headerlink" title="5.在deactivate.d文件夹中创建同名文件env_vars.bat，将环境变量重置为原始的内容。"></a>5.在deactivate.d文件夹中创建同名文件<strong>env_vars.bat</strong>，将环境变量重置为原始的内容。</h5><p>文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@set PATH=%OLD_PATH%</span><br></pre></td></tr></table></figure><h5 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h5><p>分别在base环境与新建的tensorflow环境输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc --version</span><br></pre></td></tr></table></figure><p>若base环境显示的cuda版本为之前添加环境变量的版本，而新虚拟环境的版本为上述步骤新建的，则配置成功。</p><h2 id="四、如何在pycharm中选定已配置的虚拟环境"><a href="#四、如何在pycharm中选定已配置的虚拟环境" class="headerlink" title="四、如何在pycharm中选定已配置的虚拟环境"></a>四、如何在pycharm中选定已配置的虚拟环境</h2><p>1.新建的虚拟环境默认保存位置在anaconda安装路径中的envs文件</p><p>2.打开pycharm后按照以下路径操作：</p><p>a.file-&gt;setting-&gt;project:新建项目名-&gt;python interpreter-&gt;add</p><p>b.Virtualenv Environment -&gt;existing environment-&gt;新建虚拟环境路径 -&gt;…..python.exe -&gt;ok</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文内容：1、Windows下深度学习的虚拟环境搭建，涉及到anaconda、cuda、cudnn、tensorflow安装。&lt;/p&gt;
&lt;p&gt;维护：&lt;code&gt;吴海鹏（2020秋入学硕士生）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;部署：&lt;code&gt;郭伏雨（博士生）&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>唐倩团队</title>
    <link href="http://tqcqu.github.io/group/"/>
    <id>http://tqcqu.github.io/group/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2019-10-29T09:12:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：唐倩团队简介</p><a id="more"></a> <h1 id="导师简介"><a href="#导师简介" class="headerlink" title="导师简介"></a>导师简介</h1><p><img align="left" src="https://i.postimg.cc/CKtqf190/0-tangqian.jpg" style="zoom:0.2">&emsp;&emsp;<strong>唐倩</strong>，博士，教授，博士生导师，重庆市高等学校巴渝学者特聘教授，重庆市百名工程技术高端人才培养计划先进制造领域培养人选，长期从事机械传动系统设计与制造、智能制造技术与装备、增材制造等方面的研究工作，近年来作为负责人主持科技部国家科技支撑计划项目、工信部智能制造专项、国家自然科学基金面上项目、科技部国际科技合作计划项目、重庆市科技计划重大重点项目等国家级、省部级合计10余项，作为主研人参与其他省部级项目10余项，同时累计承担横向课题40余项。获得重庆市科技进步二等奖2项，重庆市教学成果一等奖1项。在国内外核心期刊发表论文40多篇，其中SCI/EI收录30余篇；已授权国家专利22项，其中发明专利17项。</p><h1 id="团队博士后简介"><a href="#团队博士后简介" class="headerlink" title="团队博士后简介"></a>团队博士后简介</h1><p><strong>冯琪翔</strong>，专注于选择性激光熔化技术研究，发表高水平期刊及会议论文10余篇，取得授权发明专利2项，作为负责人承担国家自然科学基金青年项目“基于选择性激光熔化的钛合金点阵结构等强度设计及工艺参数耦合优化”，并参与国家自然科学基金面上项目、重庆市科技计划重大重点项目等多项，研究内容涵盖选择性激光熔化工艺下金属粉末选型、金属粉末选择性激光熔化成形过程仿真及工艺参数优化、相变及微观组织分析、力学性能分析、多孔结构研究，并成功将金属粉末选择性激光熔化成形的多孔结构应用于多孔仿生骨支架设计。</p><h1 id="团队的研究方向"><a href="#团队的研究方向" class="headerlink" title="团队的研究方向"></a>团队的研究方向</h1><p><strong>智能制造</strong>：</p><p>多传感器融合生产线检测技术、工业大数据分析、工业机器人运动规划、移动机器人视觉感知、新型传动装置设计、生产线重构与智能调度等</p><p><strong>增材制造</strong>：</p><p>金属多孔结构设计，变密度结构设计，仿生骨植入物设计，成形精度及缺陷研究，金属材料加工工艺优化，微观组织与性能调控研究</p><h1 id="硕士研究生参加展览展会"><a href="#硕士研究生参加展览展会" class="headerlink" title="硕士研究生参加展览展会"></a>硕士研究生参加展览展会</h1><p>近年来，团队每年派出团队硕士研究生前往北京、上海、成都等地参加大型展览展会，了解工业界最新技术进展，同时参观访问国内一流大学的先进团队：</p><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/vTgD4Lcw/2017.jpg" height="300">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">2017年硕士研究生参加上海机器人展</div></center><br><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/wx72p19h/2019.jpg" height="300">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">2019年硕博研究生参加成都西门子大会</div></center><br><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/5yY2Lq41/2019.jpg" height="300">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">2019年硕士研究生参加上海工博会</div></center><br><center>    <img style="border-radius: 0.5125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://i.postimg.cc/VNgv8kZy/2019.jpg" height="300">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">2019年硕士研究生访问同济大学</div></center><br><h1 id="学术论文"><a href="#学术论文" class="headerlink" title="学术论文"></a>学术论文</h1><p>唐倩课题组公开发表学术论文40余篇，以下为近五年代表作：</p><ol><li>Song J, Tang Q, Feng Q, et al. Effect of heat treatment on microstructure and mechanical behaviours of 18Ni-300 maraging steel manufactured by selective laser melting[J]. Optics &amp; Laser Technology, 2019, 120: 105725.（SCI，Q1，2018IF：3.319）</li><li>Ma S, Tang Q, Feng Q, et al. Mechanical behaviours and mass transport properties of bone-mimicking scaffolds consisted of gyroid structures manufactured using selective laser melting[J]. Journal of the mechanical behavior of biomedical materials, 2019, 93: 158-169.（SCI，Q1，2018IF：3.485）</li><li>Yan D, Kovacevic A, Tang Q, et al. Numerical modelling of twin-screw pumps based on computational fluid dynamics[J]. Proceedings of the Institution of Mechanical Engineers, Part C: Journal of Mechanical Engineering Science, 2017, 231(24): 4617-4634.（SCI，Q3，2018IF：1.296）</li><li>Feng Q, Tang Q, Liu Z, et al. An investigation of the mechanical properties of metallic lattice structures fabricated using selective laser melting[J]. Proceedings of the Institution of Mechanical Engineers, Part B: Journal of Engineering Manufacture, 2018, 232(10): 1719-1730.（SCI，Q3，2018IF：1.752）</li><li>Feng Q, Tang Q, Liu Y, et al. Quasi-static analysis of mechanical properties of Ti6Al4V lattice structures manufactured using selective laser melting[J]. The International Journal of Advanced Manufacturing Technology, 2018, 94(5-8): 2301-2313.（SCI，Q2，2018IF：2.496）</li><li>Liu Z, Tang Q, Liu N, et al. A profile error compensation method in precision grinding of screw rotors[J]. The International Journal of Advanced Manufacturing Technology, 2019, 100(9-12): 2557-2567.（SCI，Q2，2018IF：2.496）</li><li>Liu Z, Tang Q, Zhang Y F, et al. An analytical method for surface roughness prediction in precision grinding of screw rotors[J]. The International Journal of Advanced Manufacturing Technology, 2019: 1-12.（SCI，Q2，2018IF：2.496）</li><li>Yan D, Tang Q, Kovacevic A, et al. Rotor profile design and numerical analysis of 2–3 type multiphase twin-screw pumps[J]. Proceedings of the Institution of Mechanical Engineers, Part E: Journal of Process Mechanical Engineering, 2018, 232(2): 186-202.（SCI，Q4，2018IF：1.126）</li><li>Liu Z, Tang Q, Li X, et al. A method for thermal characteristics modelling of hob assembly on dry hobbing machine[J]. Proceedings of the Institution of Mechanical Engineers, Part C: Journal of Mechanical Engineering Science, 2019, 233(7): 2262-2274.（SCI，Q3，2018IF：1.359）</li><li>Deng F, Tang Q, Li X, et al. Study on mapping rules and compensation methods of cutting-force-induced errors and process machining precision in gear hobbing[J]. The International Journal of Advanced Manufacturing Technology, 2018, 97(9-12): 3859-3871.（SCI，Q2，2018IF：2.496）</li></ol><h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><p>邮箱：<a href="mailto:tqcqu@cqu.edu.cn" target="_blank" rel="noopener">tqcqu@cqu.edu.cn</a></p><h1 id="团队历年博士毕业生链接"><a href="#团队历年博士毕业生链接" class="headerlink" title="团队历年博士毕业生链接"></a>团队历年博士毕业生链接</h1><hr><p><code>张元勋</code>，2013年获重庆大学机械工程专业博士学位，2011-2012年赴美国University of Connecticut进行为期一年的公派博士联合培养，现为重庆大学航空航天学院副教授、重庆大学教育部深空探测联合研究中心主任设计师，参与嫦娥四号科普载荷“月面微型生态圈”的研发，相关工作被中央电视台、新华网、CNN、BBC等国内国际主流媒体报告。</p><p><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1570348809&ver=1895&signature=y4pM7bivizD6d-6m6ycz3czqoR0cFWO0H3msPZMqDvA4PN**4vrjS9gt6xXh8bq*8VlO1ZYCpteOzbvYt0uBu4-gGghFR1aU8uqHCVa6YozRDdJ2a*x6DTGCCiZNJe84&new=1" target="_blank" rel="noopener">人类首次！重庆大学将在月球表面种土豆养蚕！</a></p><p><a href="http://ae.cqu.edu.cn/info/1094/2723.htm" target="_blank" rel="noopener">重庆大学航空航天学院张元勋副教授主页</a></p><hr><p><code>严迪</code>，2017年获重庆大学机械设计及理论专业博士学位，2014-2016年赴英国伦敦城市大学机械与航空工程系进行为期两年的公派博士联合培养。参与国家自然科学基金项目、国家国际合作项目等相关课题，主要研究方向包括螺杆机械（泵、压缩机等）型线设计、CFD数值模拟及螺旋面成型加工等。2017年7月入职武汉科技大学机械自动化学院，目前主持中国博士后科学基金面上项目1项以及湖北省博士后科技项目择优资助1项，以第一作者（或通讯作者）发表6篇SCI/EI检索论文。</p><p><a href>严迪讲师作“螺杆泵三维流场数值模拟及螺杆转子精密成型加工技术研究”报告</a></p><hr><p><code>刘宗敏</code>，博士，新加坡国立大学联合培养博士，获重庆大学2019届优秀毕业研究生荣誉称号，现就职于重庆工商大学国家智能制造服务国际科技合作基地。主要从事螺旋曲面精密制造、智能制造技术等方面的研究。主研国家自然科学基金、国家重点研发计划、科技部国际合作专项等多项国家及省部级研究课题，已在国内外权威期刊和国际重要会议上发表论文8篇；获权发明专利6项；获软件著作权2项。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：唐倩团队简介&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
